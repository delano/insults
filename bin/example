#!/usr/bin/ruby

INSULTS_HOME = File.expand_path(File.join(File.dirname(__FILE__), '..'))
$:.unshift(File.join(INSULTS_HOME, 'lib')) # Make sure our local lib is first in line



require 'rubygems'
require 'insults'
require 'try'

Insults.wilma
#Try.nothing


__END__
http://pleac.sourceforge.net/pleac_ruby/strings.html
http://www.oreillynet.com/ruby/blog/2007/10/fun_with_unicode_1.html
http://www.ruby-doc.org/core/classes/Array.html#M002245
http://www.infoq.com/articles/eval-options-in-ruby


puts [226, 153, 186].pack('C*') # ♺
puts [226, 136, 145].pack('C*') # ∑

Ybbx vqvbg, '%f' qbrfa'g rkvfg.
"And take your crap back: ", odd.join($/) unless odd.nil? || odd.empty?

class Module
 @@_1__ = []
 def included(base)
   _ %s'We have a pudgy new friend named %s!'.to_s % base  unless @@_1__.member?(base)
   @@_1__ << base
 end
end


def pout(m); $stderr.puts m; end
alias :'☞' :pout
private
 def this_method
   caller[0] =~ /`([^']*)'/ and $1
 end
 def crap_method
   caller[1] =~ /`([^']*)'/ and $1
 end
 def self.included(base)
   _ :'♺', "Urer %f nz.", 'I'
 end
 
"INSULTS".unpack("C*")
 
puts "∑".unpack("C*")
before = [226, 136, 145].pack('C*')
after = "∑"

puts before.unpack("C*")
puts after.unpack("C*")
puts before == after

#puts (':'[0] + '@'[0])

#?

33 = !
34 = "
35 = #
36 = $
37 = %
38 = &
39 = '
40 = (
41 = )
42 = *
43 = +
44 = ,
45 = -
46 = .
47 = /
48 = 0
49 = 1
50 = 2
51 = 3
52 = 4
53 = 5
54 = 6
55 = 7
56 = 8
57 = 9
58 = :
59 = ;
60 = <
61 = =
62 = >
63 = ?
64 = @
65 = A
66 = B
67 = C
68 = D
69 = E
70 = F
71 = G
72 = H
73 = I
74 = J
75 = K
76 = L
77 = M
78 = N
79 = O
80 = P
81 = Q
82 = R
83 = S
84 = T
85 = U
86 = V
87 = W
88 = X
89 = Y
90 = Z
91 = [
92 = \
93 = ]
94 = ^
95 = _
96 = `
97 = a
98 = b
99 = c
100 = d
101 = e
102 = f
103 = g
104 = h
105 = i
106 = j
107 = k
108 = l
109 = m
110 = n
111 = o
112 = p
113 = q
114 = r
115 = s
116 = t
117 = u
118 = v
119 = w
120 = x
121 = y
122 = z
123 = {
124 = |
125 = }
126 = ~